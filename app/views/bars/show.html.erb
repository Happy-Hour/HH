<style>
    html, body, #map-canvas {
        height: 30%;
        margin: 0px;
        padding: 0px
    }
</style>
<div id="map-canvas"></div>

<div class="main-bar-img"><%= image_tag("example-bar.jpg", :alt => "banner logo") %>

<h2>Bull & Bear</h2>
<!-- <div class="btn-add"><a href="#"><img src="../app/assets/images/btn-add.png" /></a></div> -->
</div>

<section class="bar-info">
    <p class="bar-address"><%= @bar.address %></p>
    <p class="bar-tel"><%= @bar.contact_2 %></p>
    <p class="bar-specials-day">Monday -HARDCODED</p>
    <div id="address-geocode" style="display: none;"><%= @address_for_geocoding %></div>
    <button id="address-button">Geocode</button>
</section>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>
<script>
  $(document).ready ( function(){
    // JLW there is an option for asynchronous loading of the google map.
    // This would be better. Add it time. There is also an option to style the map.

    // Note: This example requires that you consent to location sharing when
    // prompted by your browser. If you see a blank space instead of the map, this
    // is probably because you have denied permission for location sharing.

      $('#address-button').on("click", function (){
       console.log('clicked');
       codeAddress();
      });

      //this is a "compiled" JS file that allows me to make the location dot. todo JLW handle this better.
      (function(){'use strict';var d,e=this;function g(a,b,c){return a.call.apply(a.bind,arguments)}function k(a,b,c){if(!a)throw Error();if(2<arguments.length){var f=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,f);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function n(a,b,c){n=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?g:k;return n.apply(null,arguments)}
          function p(a,b){var c=a.split("."),f=e;c[0]in f||!f.execScript||f.execScript("var "+c[0]);for(var h;c.length&&(h=c.shift());)c.length||void 0===b?f[h]?f=f[h]:f=f[h]={}:f[h]=b};function q(a,b,c){var f={clickable:!1,cursor:"pointer",draggable:!1,flat:!0,icon:{url:"http://chadkillingsworth.github.io/geolocation-marker/images/gpsloc.png",size:new google.maps.Size(34,34),scaledSize:new google.maps.Size(17,17),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(8,8)},optimized:!1,position:new google.maps.LatLng(0,0),title:"Current location",zIndex:2};b&&(f=this.c(f,b));b={clickable:!1,radius:0,strokeColor:"1bb6ff",strokeOpacity:.4,fillColor:"61a0bf",fillOpacity:.4,
              strokeWeight:1,zIndex:1};c&&(b=this.c(b,c));this.b=new google.maps.Marker(f);this.a=new google.maps.Circle(b);google.maps.MVCObject.prototype.set.call(this,"accuracy",null);google.maps.MVCObject.prototype.set.call(this,"position",null);google.maps.MVCObject.prototype.set.call(this,"map",null);this.set("minimum_accuracy",null);this.set("position_options",{enableHighAccuracy:!0,maximumAge:1E3});this.a.bindTo("map",this.b);a&&this.e(a)}var r={map:!0,position:!0,radius:!0},t=/^(?:position|accuracy)$/i;(function(){var a=google.maps.MVCObject;function b(){}b.prototype=a.prototype;q.t=a.prototype;q.prototype=new b;q.prototype.constructor=q;q.s=function(b,f,h){for(var m=Array(arguments.length-2),l=2;l<arguments.length;l++)m[l-2]=arguments[l];return a.prototype[f].apply(b,m)}})();d=q.prototype;d.set=function(a,b){if(t.test(a))throw"'"+a+"' is a read-only property.";"map"===a?this.e(b):google.maps.MVCObject.prototype.set.apply(this,arguments)};d.b=null;d.a=null;d.h=function(){return this.get("map")};
          d.j=function(){return this.get("position_options")};d.p=function(a){this.set("position_options",a)};d.d=function(){return this.get("position")};d.k=function(){return this.get("position")?this.a.getBounds():null};d.i=function(){return this.get("accuracy")};d.f=function(){return this.get("minimum_accuracy")};d.o=function(a){this.set("minimum_accuracy",a)};d.g=-1;
          d.e=function(a){google.maps.MVCObject.prototype.set.call(this,"map",a);a?this.r():(this.b.unbind("position"),this.a.unbind("center"),this.a.unbind("radius"),google.maps.MVCObject.prototype.set.call(this,"accuracy",null),google.maps.MVCObject.prototype.set.call(this,"position",null),navigator.geolocation.clearWatch(this.g),this.g=-1,this.b.setMap(a))};d.n=function(a){this.b.setOptions(this.c({},a))};d.m=function(a){this.a.setOptions(this.c({},a))};
          d.q=function(a){var b=new google.maps.LatLng(a.coords.latitude,a.coords.longitude),c=null==this.b.getMap();if(c){if(null!=this.f()&&a.coords.accuracy>this.f())return;this.b.setMap(this.h());this.b.bindTo("position",this);this.a.bindTo("center",this,"position");this.a.bindTo("radius",this,"accuracy")}this.i()!=a.coords.accuracy&&google.maps.MVCObject.prototype.set.call(this,"accuracy",a.coords.accuracy);!c&&null!=this.d()&&this.d().equals(b)||google.maps.MVCObject.prototype.set.call(this,"position",
                  b)};d.r=function(){navigator.geolocation&&(this.g=navigator.geolocation.watchPosition(n(this.q,this),n(this.l,this),this.j()))};d.l=function(a){google.maps.event.trigger(this,"geolocation_error",a)};d.c=function(a,b){for(var c in b)!0!==r[c]&&(a[c]=b[c]);return a};p("GeolocationMarker",q);p("GeolocationMarker.prototype.getAccuracy",q.prototype.i);p("GeolocationMarker.prototype.getBounds",q.prototype.k);p("GeolocationMarker.prototype.getMap",q.prototype.h);
          p("GeolocationMarker.prototype.getMinimumAccuracy",q.prototype.f);p("GeolocationMarker.prototype.getPosition",q.prototype.d);p("GeolocationMarker.prototype.getPositionOptions",q.prototype.j);p("GeolocationMarker.prototype.setCircleOptions",q.prototype.m);p("GeolocationMarker.prototype.setMap",q.prototype.e);p("GeolocationMarker.prototype.setMarkerOptions",q.prototype.n);p("GeolocationMarker.prototype.setMinimumAccuracy",q.prototype.o);p("GeolocationMarker.prototype.setPositionOptions",q.prototype.p);
      }).call(window)

      var geocoder;
      var map;

      function initialize() {
          geocoder = new google.maps.Geocoder();
          //var latlng = new google.maps.LatLng(-34.397, 150.644);
          var mapOptions = {
              zoom: 6,
              disableDefaultUI:true
          };

          // JLW this lines can be copied from examples here: https://snazzymaps.com/explore?tag=light
          // JLW or created here: http://gmaps-samples-v3.googlecode.com/svn/trunk/styledmaps/wizard/index.html?utm_medium=twitter
          // grey var hhStyles = [{"featureType":"landscape","stylers":[{"saturation":-100},{"lightness":65},{"visibility":"on"}]},{"featureType":"poi","stylers":[{"saturation":-100},{"lightness":51},{"visibility":"simplified"}]},{"featureType":"road.highway","stylers":[{"saturation":-100},{"visibility":"simplified"}]},{"featureType":"road.arterial","stylers":[{"saturation":-100},{"lightness":30},{"visibility":"on"}]},{"featureType":"road.local","stylers":[{"saturation":-100},{"lightness":40},{"visibility":"on"}]},{"featureType":"transit","stylers":[{"saturation":-100},{"visibility":"simplified"}]},{"featureType":"administrative.province","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"labels","stylers":[{"visibility":"on"},{"lightness":-25},{"saturation":-100}]},{"featureType":"water","elementType":"geometry","stylers":[{"hue":"#ffff00"},{"lightness":-25},{"saturation":-97}]}];
          var hhStyles = [
              {
                  "featureType": "administrative",
                  "elementType": "labels.text.fill",
                  "stylers": [
                      {
                          "color": "#444444"
                      }
                  ]
              },
              {
                  "featureType": "landscape",
                  "elementType": "all",
                  "stylers": [
                      {
                          "color": "#f2f2f2"
                      }
                  ]
              },
              {
                  "featureType": "poi",
                  "elementType": "all",
                  "stylers": [
                      {
                          "visibility": "off"
                      }
                  ]
              },
              {
                  "featureType": "road",
                  "elementType": "all",
                  "stylers": [
                      {
                          "saturation": -100
                      },
                      {
                          "lightness": 45
                      }
                  ]
              },
              {
                  "featureType": "road.highway",
                  "elementType": "all",
                  "stylers": [
                      {
                          "visibility": "simplified"
                      }
                  ]
              },
              {
                  "featureType": "road.arterial",
                  "elementType": "labels.icon",
                  "stylers": [
                      {
                          "visibility": "off"
                      }
                  ]
              },
              {
                  "featureType": "transit",
                  "elementType": "all",
                  "stylers": [
                      {
                          "visibility": "off"
                      }
                  ]
              },
              {
                  "featureType": "water",
                  "elementType": "all",
                  "stylers": [
                      {
                          "color": "#46bcec"
                      },
                      {
                          "visibility": "on"
                      }
                  ]
              }
          ];

          map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
          map.setOptions({styles: hhStyles});


          GeoMarker = new GeolocationMarker();
          GeoMarker.setCircleOptions({fillColor: '#808080'});

          google.maps.event.addListenerOnce(GeoMarker, 'position_changed', function() {
              map.setCenter(this.getPosition());
              map.fitBounds(this.getBounds());
          });

          google.maps.event.addListener(GeoMarker, 'geolocation_error', function(e) {
              alert('There was an error obtaining your position. Message: ' + e.message);
          });

          GeoMarker.setMap(map);

          // Try HTML5 geolocation
          if(navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(function(position) {
                  var pos = new google.maps.LatLng(position.coords.latitude,
                          position.coords.longitude);

                  var infowindow = new google.maps.InfoWindow({
                      map: map,
                      position: pos,
                      //content: 'Location found using HTML5.'
                  });

                  map.setCenter(pos);
              }, function() {
                  handleNoGeolocation(true);
              });
          } else {
              // Browser doesn't support Geolocation
              handleNoGeolocation(false);
          };
      };

      function handleNoGeolocation(errorFlag) {
          if (errorFlag) {
              var content = 'Error: The Geolocation service failed.';
          } else {
              var content = 'Error: Your browser doesn\'t support geolocation.';
          };

          var options = {
              map: map,
              position: new google.maps.LatLng(60, 105),
              content: content
          };

          var infowindow = new google.maps.InfoWindow(options);
          map.setCenter(options.position);
      };

      // this takes an address as a string, converts it to lat long and puts it on the map and centres.
      function codeAddress() {
          var address = document.getElementById('address-geocode').innerHTML;
          console.log('code Address is:');
          console.log(address);
          geocoder.geocode( { 'address': address}, function(results, status) {
              if (status == google.maps.GeocoderStatus.OK) {
                  map.setCenter(results[0].geometry.location);
                  var marker = new google.maps.Marker({
                      map: map,
                      position: results[0].geometry.location
                  });
              } else {
                  alert('Geocode was not successful for the following reason: ' + status);
              };
          });
      };
      google.maps.event.addDomListener(window, 'load', initialize);
  });
</script>
